##
## EPITECH PROJECT, 2023
## GLaDOS
## File description:
## workflow
##

name: Epitech

on: [ push ]

env:
  URL: "git@github.com:EpitechPromo2026/B-FUN-500-PAR-5-1-glados-damien.benais-captal.git"
  CHECKER: ".github/script/check_res_cs.sh"
  CODING_STYLE: ".github/script/check.sh"
  LAMBDANANAS: ".github/script/lambdananas"
  BINARIE: "glados"

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: assign execution rights to $CODING_STYLE
        run: chmod +x ./$CODING_STYLE
      - name: assign execution rights to $CHECKER
        run: chmod +x ./$CHECKER
      - name: assign execution rights to $LAMBDANANAS
        run: chmod +x ./$LAMBDANANAS
      - name: run $CODING_STYLE_CHECKER
        run: ./$CODING_STYLE $(pwd) $(pwd)
      - name: checking the results
        run: |
          chmod +x ./$CHECKER
          ./$CHECKER  && exit  $? || exit 1

  check_compile:
    name: Check compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: add haskel part
        uses: haskell-actions/setup@v2
        with:
          ghc-version: '9.2.8'
          enable-stack: true
          stack-version: 'latest'
      - name: Run make
        run: make
      - name: Run make clean
        run: make clean
      - name: Check if binarie is compiled
        run: find -name "$BINARIE" | grep -q . && exit 0 || exit 1
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: $BINARIE
          path: $BINARIE

  check_unit_test:
    name: Check Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: add haskel part
        uses: haskell-actions/setup@v2
        with:
          ghc-version: '9.2.8'
          enable-stack: true
          stack-version: 'latest'
      - name: Run test haskell with stack
        run: stack test --coverage

  release:
    name: release
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - check_coding_style
      - check_compile
      - check_unit_test
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: simple
          package-name: GLaDOS
      - uses: actions/checkout@v3
      - name: tag stable versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/google-github-actions/release-please-action.git"
          git tag -d stable || true
          git push origin :stable || true
          git tag -a stable -m "Last Stable Release"
          git push origin stable
       
  push_to_mirror:
    name: Push to Epitech repository
    runs-on: ubuntu-latest
    if: ${{ github.event_name }} == "push"
    steps:
      - name: Repository checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cloning to mirror
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.URL }}
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}
    needs: [ check_coding_style, check_compile, check_unit_test ]
